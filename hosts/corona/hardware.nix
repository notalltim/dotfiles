# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  ...
}:
let
  inherit (lib) mkIf;
  host = config.baseline.host.name;
in
(mkIf (host == "corona") {
  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "nvme"
    "rtsx_pci_sdmmc"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/ef01f7d5-4fbb-4698-b52b-65e98fb72b88";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-2c41da10-8602-47c2-971d-62b811339cd5".device =
    "/dev/disk/by-uuid/2c41da10-8602-47c2-971d-62b811339cd5";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/CB5B-90F7";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  swapDevices = [ ];
  services.xserver.videoDrivers = lib.mkDefault [
    "modesetting" # example for Intel iGPU; use "amdgpu" here instead if your iGPU is AMD
  ];
  # Hardware compatibility
  # Enable touchpad support (enabled default in most desktopManager).
  services.libinput.enable = true;
  hardware.keyboard.qmk.enable = true;
  services.hardware.bolt.enable = true;
  services.fprintd.enable = true;
  hardware.bluetooth.enable = true;
  hardware.graphics.enable = true;

  hardware.nvidia = {

    # Modesetting is required.
    modesetting.enable = true;

    # Nvidia power management. Experimental, and can cause sleep/suspend to fail.
    # Enable this if you have graphical corruption issues or application crashes after waking
    # up from sleep. This fixes it by saving the entire VRAM memory to /tmp/ instead
    # of just the bare essentials.
    powerManagement.enable = false;

    # Fine-grained power management. Turns off GPU when not in use.
    # Experimental and only works on modern Nvidia GPUs (Turing or newer).
    powerManagement.finegrained = false;

    # Enable the Nvidia settings menu,
    # accessible via `nvidia-settings`.
    nvidiaSettings = true;
    prime.offload.enable = true;
    primeBatterySaverSpecialisation = true;
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp59s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.enableRedistributableFirmware = lib.mkDefault true;
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
})
